<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:system.properties" />
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.alacoder.lion.admin.web" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
    
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="cnManager">  
        <mvc:message-converters register-defaults="true">  
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>  
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <!--<property name="supportedMediaTypes">-->  
                    <!--<list>-->  
                        <!--<value>text/html;charset=UTF-8</value>-->  
                        <!--<value>application/json;charset=UTF-8</value>-->  
                        <!--<value>application/javascript;charset=UTF-8</value>-->  
                        <!--<value>text/plain;charset=UTF-8</value>-->  
                    <!--</list>-->  
                <!--</property>-->  
                <property name="prettyPrint" value="true"></property>  
                <property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>  
                    </bean>  
                </property>  
            </bean>  
        </mvc:message-converters>  
    </mvc:annotation-driven>  

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">  
        <property name="ignoreAcceptHeader" value="true"/>  
        <property name="favorPathExtension" value="true"/>  
        <property name="defaultContentType" value="text/html"/>  
        <property name="favorParameter" value="true"/>  
        <property name="mediaTypes">  
            <map>  
                <entry key="xml" value="application/xml"/>  
                <entry key="json" value="text/plain"/>  
                <entry key="xls" value="application/vnd.ms-excel"/>  
            </map>  
        </property>  
    </bean> 
	
	 <!-- 多视图处理器 -->
	 <bean id="viewResolver"  
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
        <property name="contentNegotiationManager" ref="cnManager"/>  
        <property name="viewResolvers"><!-- 针对freemarker的视图配置 -->   
            <list>  
                <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
                	 <property name="cache" value="true"/>
                     <property name="contentType" value="text/html;charset=UTF-8"></property>
                     <!-- 宏命令的支持  -->
                     <property name="exposeSpringMacroHelpers" value="true"/>
                     <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
                     <property name="requestContextAttribute" value="rc"></property>
                    <property name="viewNames" value=".ftl"/>  
                    <property name="prefix" value="" />  
                    <property name="suffix" value="" />  
                    <property name="order" value="2"/>  
                </bean>  
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
                   	<property name="prefix" value="${web.view.prefix}"/>
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
                </bean>  
            </list>  
        </property>  
        <property name="defaultViews">  
            <list>  
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">  
                    <!-- <property name="extractValueFromSingleKeyModel" value="true"/> -->  
                    <property name="prettyPrint" value="true"/>  
                    <property name="contentType" value="text/plain"/>  
                </bean>  
            </list>  
        </property>  
    </bean>  

 <!-- freemarker config -->
    <bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">5</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
            </props>
        </property>
    </bean>
	
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	
	<!-- 静态资源映射 -->
    <mvc:resources mapping="/content/**" location="/content/" cache-period="31536000"/>
	
	<!-- 定义无Controller的path<->view直接映射 
	<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>
	-->
	
	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="${adminPath}/**" />
			<mvc:exclude-mapping path="${adminPath}/"/>
			<mvc:exclude-mapping path="${adminPath}/login"/>
			<mvc:exclude-mapping path="${adminPath}/sys/menu/tree"/>
			<mvc:exclude-mapping path="${adminPath}/sys/menu/treeData"/>
			<mvc:exclude-mapping path="${adminPath}/oa/oaNotify/self/count"/>
			<bean class="com.alacoder.lion.admin.web.sys.interceptor.LogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
			</property>
	</bean>
		-->
	<!-- 支持Shiro对Controller的方法级AOP安全控制 end -->
	
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="${web.maxUploadSize}" />  
	</bean>
	
</beans>